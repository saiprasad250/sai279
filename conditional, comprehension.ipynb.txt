{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c8a2b4b7-d22e-4a0f-b5f6-9340bb6fdeea",
   "metadata": {},
   "source": [
    "#conditional, comprehension"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d1c8f38e-c7f6-4470-9437-56d577564b21",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "even\n"
     ]
    }
   ],
   "source": [
    "num = 6\n",
    "if num %2 == 0:\n",
    "    print(\"even\")\n",
    "else:\n",
    "    print(\"odd\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5473726b-b3db-438e-971d-c0fdad7b6a45",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "even\n"
     ]
    }
   ],
   "source": [
    "print(\"even\") if num %2 == 0 else print(\"odd\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e302064-d03e-4fbb-9044-4ed3af2d5f37",
   "metadata": {},
   "source": [
    "#nested if-else in one line"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "446dfca6-f329-4e30-9a34-3f2c94282421",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "zero\n"
     ]
    }
   ],
   "source": [
    "num = 0\n",
    "result = \"positive\" if num>0 else (\"negative\" if num<0 else \"zero\")\n",
    "print(result)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e71e725-ddf9-4728-a5b0-5e18458330a9",
   "metadata": {},
   "source": [
    "#List Comprehension"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b35916a2-41c2-4c66-be05-2c2a467c7310",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8, 90, 130, 68]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list = [1,2,3,4,45,65,34]\n",
    "[2*x for x in list]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2022a89-5e11-42cd-ad34-697624d00069",
   "metadata": {},
   "source": [
    "#printing the even numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "4bd90d51-ee48-41a5-879b-789a7784facf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8, 126]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list = [1,2,3,4,5,6,7,8,9,125,126]\n",
    "[x for x in list if x%2 == 0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a63fcd33-2ab7-4fa3-8663-fbfc6bb57fe0",
   "metadata": {},
   "source": [
    "# printing the Odd Numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "252f7bbf-c8f6-4d31-8967-279290da6342",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 3, 5, 7, 9, 125]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[x for x in list if x%2 ==1]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b931dee6-42ea-462f-aff1-9a573b3e7c1d",
   "metadata": {},
   "source": [
    "#average numbers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "1999c720-f9e4-4a03-966f-6c98cff97a9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "26.90909090909091"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list = [1,2,3,4,5,6,7,8,9,125,126]\n",
    "sum(list)/len(list)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c33efaf7-25e9-42fa-94ec-2d87a589e5c3",
   "metadata": {},
   "source": [
    "#dictonary compreshion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "d8639f56-f125-4cdb-91ad-ad8b8af128aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'akhil': [1, 2, 3, 4, 5], 'kumar': [2, 3, 4, 3, 2]}"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d1 = {\"akhil\" : [1,2,3,4,5], \"kumar\" : [2,3,4,3,2,]}\n",
    "d1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "c417131a-5b85-45d0-bf5a-0cdc42dc3e8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'akhil': 3.0, 'kumar': 2.8}"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "{k:sum(v)/len(v) for k,v in d1.items()}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c439c4bc-59e2-4e0b-93dc-44c3f8e4f991",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
